// Place your settings in this file to overwrite the default settings
// ~/.config/Code/User/
// or File> Preferences> Settings
{
    "files.associations": {
        "*rc": "shellscript",
        "Vagrantfile": "ruby",
        "Vagrantfile-simple": "ruby"
    },
    "vim.easymotion": true, // <leader> <leader> w	Start of word forwards
    "vim.incsearch": true, // Show the next search match while you're searching.
    "vim.useSystemClipboard": true, // requires xclip
    "vim.startInInsertMode": true,
    "vim.useCtrlKeys": true, // Enable Vim ctrl keys overriding common VS Code operations, set vim.handleKeys
    "vim.handleKeys": {
        "<C-a>": false,
        "<C-f>": false,
        "<C-c>": false,
        "<C-v>": false,
        "<C-d>": false,
        "<C-w>": false,
        "<C-b>": false,
        "<C-x>": false
    },
    "vim.visualstar": true,  // In visual mode, start a search with * or # using the current selection
    "vim.hlsearch": true, // When there is a previous search pattern, highlight all its matches

    "vim.leader": "<space>", // For binding in Normal mode
    
    "vim.insertModeKeyBindings": [
        {
            "before": ["j", "j"],
            "after": ["<Esc>"]
        },
        {
            "before": [ "<C-h>" ],
            "after": ["<Left>"]
        },
        {
            "before": [ "<C-l>" ],
            "after": ["<Right>"]
        }
    ],
    "vim.otherModesKeyBindingsNonRecursive": [
        { // Bind : to show the command palette:
            "before": [ ":" ],
            "after": [],
            "commands": [
                {
                    "command": "workbench.action.showCommands",
                    "args": []
                }
            ]
        },
        {
            "before": ["Z", "Z"],
            "after": [],
            "commands": [
                {
                    "command": "workbench.action.files.save",
                    "args": []
                },
                {
                    "command": "workbench.action.closeActiveEditor",
                    "args": []
                }
            ]
        },
        { // Bind Ln to newfile:
            "before": [ "<leader>", "n" ],
            "after": [],
            "commands": [
                {
                    "command": "explorer.newFile",
                    "args": []
                }
            ]
        },
        { // Bind Lw to show the write file/save:
            "before": [ "<leader>", "w" ],
            "after": [],
            "commands": [
                {
                    "command": "workbench.action.files.save",
                    "args": []
                }
            ]
        },
        { // Bind Lq to close pane/active editor:
            "before": [
                "<leader>", "q"
            ],
            "after": [],
            "commands": [
                {
                    "command": "workbench.action.closeActiveEditor",
                    "args": []
                }
            ]
        },
        { // Bind Lm to list marks:
            "before": [
                "<leader>", "m"
            ],
            "after": [],
            "commands": [
                {
                    "command": "numberedBookmarks.listFromAllFiles",
                    "args": []
                }
            ]
        },
        { // Bind Ly to copy:
            "before": [ "<leader>", "y" ],
            "after": ["\"", "a", "y"]
            // "commands": [
            //     {
            //         "command": "editor.action.clipboardCopyAction",
            //         "args": []
            //     }
            // ]
        },
        { // Bind Lp to paste:
            "before": [ "<leader>", "p" ],
            "after": ["\"", "a", "p"]
            // "commands": [
            //     {
            //         "command": "editor.action.clipboardPasteAction",
            //         "args": []
            //     }
            // ]
        },
        { // Bind v expand selection
            "before": ["<leader>", "v"],
            "after": [],
            "commands": [
                {
                    "command": "editor.action.smartSelect.grow",
                    "when": "editorTextFocus",
                    "args": []
                }
            ]
        },
        { // Bind V shrink selection
            "before": ["<leader>", "V"],
            "after": [],
            "commands": [
                {
                    "command": "editor.action.smartSelect.shrink",
                    "when": "editorTextFocus",
                    "args": []
                }
            ]
        },
        { // Bind Lb to search buffers
            "before": ["<leader>", "b"],
            "after": [],
            "commands": [
                {
                    "command": "filesExplorer.findInFolder",
                    "args": []
                }
            ]
        }
    ],
    "vim.statusBarColorControl": true,
    "vim.statusBarColors" : {
        "normal": "#005f5f",
        "insert": "#5f0000",
        "visual": "#5f00af",
        "visualline": "#005f87",
        "visualblock": "#86592d",
        "replace": "#000000"
    },
    "editor.wordWrap": "bounded",
    "vim.disableAnnoyingNeovimMessage": true,
    "keyboard.dispatch": "keyCode",
    "files.autoSave": "afterDelay",
    // Controls if suggestions should automatically show up while typing
    "editor.quickSuggestions": {
        "other": true,
        "comments": true,
        "strings": true
    },
    "editor.acceptSuggestionOnEnter": "off", // Use tab key
    // Configure editor settings to be overridden for [markdown] language.
    "[markdown]":  {
        "editor.quickSuggestions": true
    },
    
    "numberedBookmarks.saveBookmarksInProject": true,
    "numberedBookmarks.navigateThroughAllFiles": "replace",

    "sync.gist": "5939f0f349414b1aaec35cf1c463a27e",
    "sync.lastUpload": "2017-09-30T04:26:26.900Z",
    "sync.autoDownload": false,
    "sync.autoUpload": false,
    "sync.lastDownload": "",
    "sync.forceDownload": false,
    "sync.anonymousGist": false,
    "sync.host": "",
    "sync.pathPrefix": "",
    "sync.quietSync": false,
    "sync.askGistName": false,
    "workbench.colorCustomizations": {
        "statusBar.background": "#5f0000",
        "statusBar.noFolderBackground": "#5f0000",
        "statusBar.debuggingBackground": "#5f0000"
    }
}