# remap prefix to Control + space
set -g prefix C-Space
bind Space send-prefix
# bind 'C-e C-e' to type 'C-e'
# bind C-e send-prefix
unbind C-b


# Force a reload of the config file on C-e r:
unbind r
bind r source-file ~/.tmux.conf

# split panes using | and -
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
bind-key x kill-pane
bind-key C-x kill-pane
unbind c
bind-key c new-window -c "#{pane_current_path}"
unbind q
bind-key q kill-window
unbind Q
bind-key Q kill-session
bind-key C-q kill-server


bind h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"

# Mouse on
set -g mouse on
bind -n WheelUpPane   select-pane -t= \; copy-mode -e \; send-keys -M
bind -n WheelDownPane select-pane -t= \;                 send-keys -M

# Speed up commands
set-option -sg escape-time 0

# Instead of detaching, switch to next active session
set-option -g detach-on-destroy off

setw -g aggressive-resize off

# switch panes using Alt-arrow without prefix
# bind -n M-Left select-pane -L
# bind -n M-Right select-pane -R
# bind -n M-Up select-pane -U
# bind -n M-Down select-pane -D

# N for new session, C to Clone
bind-key N run-shell 'TMUX= tmux new-session -d \; switch-client -n'
bind-key C run-shell 'TMUX= tmux new-session -t $(tmux display-message -p #S) -s $(tmux display-message -p #S-clone) -d \; switch-client -n \; display-message "session #S cloned"'

#-------------------------------------------------------#
#Pane copy/pasting
#-------------------------------------------------------#
# Use vim keybindings in copy mode
# setw -g mode-keys vi
# prefix <Space> to enter copy mode. Then p to copy tmux buffer into xclip
bind Space copy-mode
unbind p
bind p run "tmux show-buffer | xclip -selection clipboard -i; tmux paste-buffer"
# paste from xclip into tmux, like ctrl+shift+v
bind C-v run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"

# vim visual mode to select, and y to copy
# bind-key -t vi-copy 'v' begin-selection
# bind-key -t vi-copy 'y' copy-selection
# read and write and delete paste buffer ( xsel method)
# https://wiki.archlinux.org/index.php/Tmux#ICCCM_Selection_Integration
# ctrl+shift+v
# bind-key < command-prompt -p "copy to tmux (hit enter to confirm):" "run-shell 'tmux set-buffer -- \"$(xsel -o -b)\"'"
# bind-key > command-prompt -p "copy to xsel (hit enter to confirm):" "run-shell 'tmux show-buffer | xsel -i -b'"


# https://sheerun.net/2014/03/21/how-to-boost-your-vim-productivity/

set -g default-terminal "screen-256color"
set-option -g bell-action none
set-option -g allow-rename off
# set inactive/active window styles
# https://superuser.com/questions/285381/how-does-the-tmux-color-palette-work
set -g window-style 'bg=colour234'
set -g window-active-style 'bg=black'

#-------- Window / Pane Settings {{{
#------------------------------------------------------
# start window/pane index on 1 instead of 0
set-option -g base-index 1
set-window-option -g pane-base-index 1


# make the current window the first window
bind T swap-window -t 1

# swap windows/panes
bind-key -n M-Left swap-window -t -1
bind-key -n M-Right swap-window -t +1
# bind-key -n M-Up swap-pane -U
# bind-key -n M-Down swap-pane -D



#}}}
# LEFT SIDE {{{
# in the status bar.
set-option -g status-justify centre
set-option -g status-left-length 40
set-option -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"

#}}}
# RIGHT SIDE {{{
# use "man date" to set the clock to your liking
set-option -g status-right "#[fg=blue]#(~/battery Discharging) | #[fg=cyan]%a %D %l:%M:%p"

#}}}

# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/vim-tmux-focus-events'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'jooize/tmux-powerline-theme'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# prefix + I Refreshes TMUX environment update plugins
# prefix + U updates plugin(s)
# prefix + alt + u remove/uninstall plugins not on the plugin list

# powerline
run-shell "powerline-daemon -q"
source "$HOME/.local/lib/python3.5/site-packages/powerline/bindings/tmux/powerline.conf"

#
# Powerline theme
#

# Enable Powerline symbols (unless already specified otherwise in environment)
if-shell ': ${TMUX_POWERLINE_SYMBOLS?}' '' 'set-environment -g TMUX_POWERLINE_SYMBOLS "powerline"'

# Toggle between Powerline and Unicode symbols with ^B P
bind-key P if-shell 'test $(echo "${TMUX_POWERLINE_SYMBOLS}") = "unicode"' 'set-environment -g TMUX_POWERLINE_SYMBOLS "powerline" ; run-shell "$HOME/.tmux/plugins/powerline-theme/powerline-theme.tmux"' 'set-environment -g TMUX_POWERLINE_SYMBOLS "unicode" ; run-shell "$HOME/.tmux/plugins/tmux-powerline-theme/powerline-theme.tmux"'