# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm

# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @plugin 'tmux-plugins/tmux-copycat'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @plugin 'tmux-plugins/tmux-open'
# set -g @plugin 'tmux-plugins/tmux-logging'
# set -g @plugin 'tmux-plugins/vim-tmux-focus-events'
# set -g @plugin 'christoomey/vim-tmux-navigator'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
#run '~/.tmux/plugins/tpm/tpm'

# prefix + I Refreshes TMUX environment update plugins
# prefix + U updates plugin(s)
# prefix + alt + u remove/uninstall plugins not on the plugin list

# remap prefix to Control + .
unbind C-.
set -g prefix C-.

# next window conflicts with vim, next result
unbind n # use number key instead

# Force a reload of the config file on prefix r:
unbind r
bind r source-file ~/.tmux.conf \; display-message "tmux config reloaded"

# split panes using | and -
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
unbind c
bind-key c new-window -c "#{pane_current_path}"
unbind Q
bind-key Q kill-session
bind-key C-q kill-server

# Mouse on
set -g mouse on
# https://github.com/gotbletu/shownotes/blob/master/tmux_2.4_copy_mode_vim.md
#-------- Copy Mode (Vim Style) {{{
#------------------------------------------------------
# This section of hotkeys mainly work in copy mode and no where else

# vim keys in copy and choose mode
set-window-option -g mode-keys vi

# copying selection vim style
# http://jasonwryan.com/blog/2011/06/07/copy-and-paste-in-tmux/
# https://github.com/myfreeweb/dotfiles/blob/master/tmux.conf
bind-key Escape copy-mode			# enter copy mode; default [
bind-key p paste-buffer				# paste; (default hotkey: ] )
bind-key P choose-buffer 			# tmux clipboard history
bind-key + delete-buffer \; display-message "Deleted current Tmux Clipboard History"


# Send To Tmux Clipboard or System Clipboard
bind-key < run-shell "tmux set-buffer -- \"$(xsel -o -b)\"" \; display-message "Copy To Tmux Clipboard"
bind-key > run-shell 'tmux show-buffer | xsel -i -b' \; display-message "Copy To System Clipboard"

# set the current tmux version (use this variable on if-shell commands)
run-shell "tmux set-environment -g TMUX_VERSION $(tmux -V | cut -c 6-)"

# vim copy mode rebinds for (tmux 2.4+)
# https://shapeshed.com/custom-vim-bindings-in-tmux-2-4/
# https://github.com/tmux/tmux/issues/754#issuecomment-303156000
# https://stackoverflow.com/a/40902312
# Note: rectangle-toggle (aka Visual Block Mode) > hit v then C-v to trigger it
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
  'bind-key -T copy-mode-vi v send-keys -X begin-selection; \
  bind-key -T copy-mode-vi V send-keys -X select-line; \
  bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle; \
  bind-key -T choice-mode-vi h send-keys -X tree-collapse ; \
  bind-key -T choice-mode-vi l send-keys -X tree-expand ; \
  bind-key -T choice-mode-vi H send-keys -X tree-collapse-all ; \
  bind-key -T choice-mode-vi L send-keys -X tree-expand-all ; \
  bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "xclip -in -selection clipboard"; \
  bind-key -T copy-mode-vi y send-keys -X copy-pipe "xclip -in -selection clipboard"'

# vim copy mode rebinds for (tmux 2.3 or lower)
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' \
  'bind-key -t vi-copy v begin-selection; \
  bind-key -t vi-copy V select-line; \
  bind-key -t vi-copy C-v rectangle-toggle; \
  bind-key -t vi-choice h tree-collapse; \
  bind-key -t vi-choice l tree-expand; \
  bind-key -t vi-choice H tree-collapse-all; \
  bind-key -t vi-choice L tree-expand-all; \
  bind-key -t vi-copy MouseDragEnd1Pane copy-pipe "xclip -in -selection clipboard"; \
  bind-key -t vi-copy y copy-pipe "xclip -in -selection clipboard"'


# Instead of detaching, switch to next active session
set-option -g detach-on-destroy off


# N for new session, C to Clone
bind-key N run-shell 'TMUX= tmux new-session -d \; switch-client -n'
bind-key C run-shell 'TMUX= tmux new-session -t $(tmux display-message -p #S) -s $(tmux display-message -p #S-clone) -d \; switch-client -n \; display-message "session #S cloned"'


# https://sheerun.net/2014/03/21/how-to-boost-your-vim-productivity/

set -g default-terminal "screen-256color"
set-option -g bell-action none
set-option -g allow-rename off
# set inactive/active window styles
# https://superuser.com/questions/285381/how-does-the-tmux-color-palette-work
set -g window-style 'bg=colour234'
set -g window-active-style 'bg=black'

#-------- Window / Pane Settings {{{
#------------------------------------------------------
# start window/pane index on 1 instead of 0
set-option -g base-index 1
set-window-option -g pane-base-index 1

# make the current window the first window
bind T swap-window -t 1

# swap windows/panes, Alt+Left
bind-key -n M-Left swap-pane -U # swap-window -t -1
bind-key -n M-Right swap-pane -D # swap-window -t +1


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"


# https://github.com/gotbletu/shownotes/blob/master/fzf-snippet.md
bind-key "'" new-window -n snippet \; send-keys "fzf-snippet && tmux kill-window\n"
bind-key '"' new-window -n multisnippet \; send-keys "fzf-multisnippet && tmux kill-window\n"

# Lowers the delay time between the prefix key and other keys - fixes pausing in vim
set -sg escape-time 1
